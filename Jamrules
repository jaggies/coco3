#TARGET = coco3 ;

OPTIM = -g -O1 ;
#DEFINES += DEBUG ;

if $(TARGET) = "coco3" {
	#LWTOOLS
	AR = lwar -car ;
	RANLIB = echo ;

	#CMOC
	CC = cmoc ;
	#LINK = lwlink ;

	OPTIM = ;
	#CCFLAGS = --verbose ;
	CCFLAGS += -DCOCO -Dconst= ;
	CCFLAGS += --coco ; # Coco .bin file
	#CCFLAGS += --os9 ; # Coco OS9 executable
} else {
	TARGET = $(OS) ;
}

ALL_LOCATE_TARGET = $(TOP)/build/$(TARGET) ;

LINK = $(CC) $(CCFLAGS) -L$(ALL_LOCATE_TARGET) ;

DECB = decb ; # coco disk builder

#
# Rule to create a disk
#
rule CoCoDisk
{
    local _disk = $(<) ;
    local _files = $(>) ;
	MakeLocate $(<) : $(TOP)/build ;
	CoCoDiskCreate $(_disk) ;
	CoCoDiskFromFiles $(_disk) : $(_files) ;
}

#
# CocoDiskFromFiles <dskname> : <files>
#
rule CoCoDiskFromFiles
{
    local _disk _files ;

    # Add grist (absolute path) to file names
    _files = $(>) ;
    _disk = $(<) ;

    # library depends on its member objects
	Depends all : $(_disk) ;   # Force disk to be built

    # make library depend on objects
    Depends $(_disk) : $(_files) ;

    Clean clean : $(_l) ;
    CoCoDiskCopy $(_disk) : $(_files) ;
}

rule CoCoDiskCreate
{
	Depends all : $(<) ;
}

actions CoCoDiskCreate
{
	rm -f $(<) ;
    $(DECB) dskini $(<) ;
}

actions piecemeal CoCoDiskCopy
{
	$(DECB) copy -2br $(>) $(<), ;
}

